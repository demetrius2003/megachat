#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use DBI;
use File::Spec;

=head1 NAME

02_check_database.pl - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

=head1 DESCRIPTION

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ, —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MegaChat.
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.

=cut

print "üóÑÔ∏è  –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• MEGACHAT\n";
print "=" x 50 . "\n\n";

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
my $db_path = File::Spec->catfile('megachat.db');
my $db_exists = -f $db_path;

print "üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–ê–ó–ï –î–ê–ù–ù–´–•:\n";
print "   –ü—É—Ç—å: $db_path\n";
print "   –°—É—â–µ—Å—Ç–≤—É–µ—Ç: " . ($db_exists ? "‚úÖ –¥–∞" : "‚ùå –Ω–µ—Ç") . "\n";

if ($db_exists) {
    my $size = -s $db_path;
    print "   –†–∞–∑–º–µ—Ä: $size –±–∞–π—Ç\n";
}
print "\n";

# –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
print "üîå –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:\n";
my $dbh;
eval {
    $dbh = DBI->connect("dbi:SQLite:dbname=$db_path", "", "", {
        RaiseError => 1,
        PrintError => 0,
        AutoCommit => 1,
        sqlite_unicode => 1
    });
    print "   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ\n";
};
if ($@) {
    print "   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: $@\n";
    exit 1;
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü
print "\nüìä –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶:\n";

my @expected_tables = ('users', 'conversations', 'conversation_participants', 'messages', 'notes');
my %table_status;

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü
my $tables_sth = $dbh->prepare("SELECT name FROM sqlite_master WHERE type='table'");
$tables_sth->execute();
my @existing_tables;
while (my ($table) = $tables_sth->fetchrow_array()) {
    push @existing_tables, $table;
}

foreach my $table (@expected_tables) {
    if (grep { $_ eq $table } @existing_tables) {
        print "   $table: ‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n";
        $table_status{$table} = 1;
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π
        my $count_sth = $dbh->prepare("SELECT COUNT(*) FROM $table");
        $count_sth->execute();
        my ($count) = $count_sth->fetchrow_array();
        print "      –ó–∞–ø–∏—Å–µ–π: $count\n";
        
    } else {
        print "   $table: ‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n";
        $table_status{$table} = 0;
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
print "\nüîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´:\n";

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users
if ($table_status{users}) {
    print "   users:\n";
    my $pragma = $dbh->selectall_arrayref("PRAGMA table_info(users)");
    my @expected_cols = qw(id username email password_hash created_at status last_seen);
    my @actual_cols = map { $_->[1] } @$pragma;
    
    foreach my $col (@expected_cols) {
        if (grep { $_ eq $col } @actual_cols) {
            print "      ‚úÖ $col\n";
        } else {
            print "      ‚ùå $col (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)\n";
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã conversations
if ($table_status{conversations}) {
    print "   conversations:\n";
    my $pragma = $dbh->selectall_arrayref("PRAGMA table_info(conversations)");
    my @expected_cols = qw(id name description created_by created_at);
    my @actual_cols = map { $_->[1] } @$pragma;
    
    foreach my $col (@expected_cols) {
        if (grep { $_ eq $col } @actual_cols) {
            print "      ‚úÖ $col\n";
        } else {
            print "      ‚ùå $col (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)\n";
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã messages
if ($table_status{messages}) {
    print "   messages:\n";
    my $pragma = $dbh->selectall_arrayref("PRAGMA table_info(messages)");
    my @expected_cols = qw(id conversation_id sender_id content message_type file_path created_at);
    my @actual_cols = map { $_->[1] } @$pragma;
    
    foreach my $col (@expected_cols) {
        if (grep { $_ eq $col } @actual_cols) {
            print "      ‚úÖ $col\n";
        } else {
            print "      ‚ùå $col (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)\n";
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
print "\nüîó –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–•:\n";

# –ü—Ä–æ–≤–µ—Ä–∫–∞ foreign key constraints
eval {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ conversation_participants —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ users –∏ conversations
    my $check1 = $dbh->selectrow_array("
        SELECT COUNT(*) FROM conversation_participants cp 
        LEFT JOIN users u ON cp.user_id = u.id 
        WHERE u.id IS NULL
    ");
    
    if ($check1 > 0) {
        print "   ‚ùå –ù–∞–π–¥–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–æ–≤ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $check1\n";
    } else {
        print "   ‚úÖ –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–≤—è–∑–∞–Ω—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n";
    }
    
    my $check2 = $dbh->selectrow_array("
        SELECT COUNT(*) FROM messages m 
        LEFT JOIN conversations c ON m.conversation_id = c.id 
        WHERE c.id IS NULL
    ");
    
    if ($check2 > 0) {
        print "   ‚ùå –ù–∞–π–¥–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —á–∞—Ç–æ–≤: $check2\n";
    } else {
        print "   ‚úÖ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–≤—è–∑–∞–Ω—ã —Å —á–∞—Ç–∞–º–∏\n";
    }
};

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
print "\nüìá –ü–†–û–í–ï–†–ö–ê –ò–ù–î–ï–ö–°–û–í:\n";
my $indexes = $dbh->selectall_arrayref("SELECT name, tbl_name FROM sqlite_master WHERE type='index' AND name NOT LIKE 'sqlite_%'");
if (@$indexes) {
    foreach my $index (@$indexes) {
        print "   ‚úÖ $index->[0] –Ω–∞ —Ç–∞–±–ª–∏—Ü–µ $index->[1]\n";
    }
} else {
    print "   ‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω–¥–µ–∫—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n";
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
print "\n‚ö° –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:\n";
my $start_time = time();

# –¢–µ—Å—Ç –≤—Å—Ç–∞–≤–∫–∏
eval {
    $dbh->begin_work();
    my $test_sth = $dbh->prepare("INSERT INTO users (username, email, password_hash, created_at, status) VALUES (?, ?, ?, ?, ?)");
    for my $i (1..100) {
        $test_sth->execute("test_user_$i", "test$i\@example.com", "test_hash", time(), "offline");
    }
    $dbh->rollback(); # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    
    my $insert_time = time() - $start_time;
    print "   ‚úÖ –í—Å—Ç–∞–≤–∫–∞ 100 –∑–∞–ø–∏—Å–µ–π: ${insert_time}—Å\n";
};
if ($@) {
    print "   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –≤—Å—Ç–∞–≤–∫–∏: $@\n";
}

# –¢–µ—Å—Ç –≤—ã–±–æ—Ä–∫–∏
$start_time = time();
eval {
    my $select_sth = $dbh->prepare("SELECT * FROM users LIMIT 100");
    $select_sth->execute();
    my $results = $select_sth->fetchall_arrayref();
    
    my $select_time = time() - $start_time;
    print "   ‚úÖ –í—ã–±–æ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π: ${select_time}—Å\n";
};
if ($@) {
    print "   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –≤—ã–±–æ—Ä–∫–∏: $@\n";
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
print "\nüß™ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•:\n";

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
my ($user_count) = $dbh->selectrow_array("SELECT COUNT(*) FROM users");
if ($user_count < 3) {
    print "   üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n";
    
    my $users = [
        ['admin', 'admin@megachat.local', 'admin_hash', 'online'],
        ['user1', 'user1@megachat.local', 'user1_hash', 'offline'], 
        ['user2', 'user2@megachat.local', 'user2_hash', 'offline']
    ];
    
    my $user_sth = $dbh->prepare("INSERT OR IGNORE INTO users (username, email, password_hash, created_at, status) VALUES (?, ?, ?, ?, ?)");
    foreach my $user (@$users) {
        $user_sth->execute($user->[0], $user->[1], $user->[2], time(), $user->[3]);
        print "      ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $user->[0]\n";
    }
} else {
    print "   ‚ÑπÔ∏è  –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç ($user_count)\n";
}

$dbh->disconnect();

print "\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:\n";
print "=" x 30 . "\n";

my $all_tables_ok = 1;
foreach my $table (@expected_tables) {
    if (!$table_status{$table}) {
        $all_tables_ok = 0;
        last;
    }
}

if ($all_tables_ok) {
    print "üéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!\n";
    print "   –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã.\n";
    print "   –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.\n\n";
    
    print "üí° –î–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n";
    print "   DELETE FROM users WHERE username LIKE 'test_user_%';\n";
    exit 0;
} else {
    print "‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•!\n";
    print "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü.\n";
    print "   perl megachat.pl\n";
    exit 1;
}

__END__

=head1 USAGE

    cd megachat
    perl tests/02_check_database.pl

=head1 AUTHOR

MegaChat Project

=cut
