#!/usr/bin/env perl
use strict;
use warnings;
use utf8;

=head1 NAME

01_check_components.pl - –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö Perl –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

=head1 DESCRIPTION

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö Perl –º–æ–¥—É–ª–µ–π 
–¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã MegaChat –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

=cut

print "üîç –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–• PERL –ö–û–ú–ü–û–ù–ï–ù–¢–û–í\n";
print "=" x 50 . "\n\n";

my @required_modules = (
    'Mojolicious',
    'Mojolicious::Lite', 
    'DBI',
    'DBD::SQLite',
    'JSON',
    'Digest::MD5',
    'Time::Piece',
    'Encode',
    'File::Spec',
    'File::Path',
    'Cwd'
);

my @optional_modules = (
    'Data::Dumper',
    'Test::More',
    'IO::Socket::SSL',
    'Mojo::JSON'
);

my $all_required_ok = 1;
my $perl_version_ok = 1;

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Perl
print "üìã –ü–†–û–í–ï–†–ö–ê –í–ï–†–°–ò–ò PERL:\n";
my $perl_version = $^V;
print "   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $perl_version\n";

if ($] < 5.020) {
    print "   ‚ùå –û–®–ò–ë–ö–ê: –¢—Ä–µ–±—É–µ—Ç—Å—è Perl 5.20 –∏–ª–∏ –≤—ã—à–µ!\n";
    $perl_version_ok = 0;
} else {
    print "   ‚úÖ –í–µ—Ä—Å–∏—è Perl –ø–æ–¥—Ö–æ–¥–∏—Ç\n";
}
print "\n";

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
print "üì¶ –ü–†–û–í–ï–†–ö–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ú–û–î–£–õ–ï–ô:\n";
foreach my $module (@required_modules) {
    print "   $module: ";
    
    eval "require $module";
    if ($@) {
        print "‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù\n";
        print "      –£—Å—Ç–∞–Ω–æ–≤–∫–∞: cpan $module\n";
        $all_required_ok = 0;
    } else {
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é
        my $version = '';
        eval {
            no strict 'refs';
            $version = ${"${module}::VERSION"} || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        };
        print "‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $version)\n";
    }
}
print "\n";

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
print "üì¶ –ü–†–û–í–ï–†–ö–ê –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ú–û–î–£–õ–ï–ô:\n";
foreach my $module (@optional_modules) {
    print "   $module: ";
    
    eval "require $module";
    if ($@) {
        print "‚ö†Ô∏è  –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n";
    } else {
        my $version = '';
        eval {
            no strict 'refs';
            $version = ${"${module}::VERSION"} || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        };
        print "‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $version)\n";
    }
}
print "\n";

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
print "üîß –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –í–û–ó–ú–û–ñ–ù–û–°–¢–ï–ô:\n";

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ UTF-8
eval {
    use utf8;
    my $test = "—Ç–µ—Å—Ç";
    print "   UTF-8 –ø–æ–¥–¥–µ—Ä–∂–∫–∞: ‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç\n";
};
if ($@) {
    print "   UTF-8 –ø–æ–¥–¥–µ—Ä–∂–∫–∞: ‚ùå –ø—Ä–æ–±–ª–µ–º—ã\n";
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
eval {
    my $test_file = 'test_write_permission.tmp';
    open my $fh, '>', $test_file or die $!;
    print $fh "test";
    close $fh;
    unlink $test_file;
    print "   –ü—Ä–∞–≤–∞ –∑–∞–ø–∏—Å–∏: ‚úÖ –µ—Å—Ç—å\n";
};
if ($@) {
    print "   –ü—Ä–∞–≤–∞ –∑–∞–ø–∏—Å–∏: ‚ùå –Ω–µ—Ç ($@)\n";
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ—Ä—Ç–æ–≤
print "   –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3000: ";
eval {
    require IO::Socket::INET;
    my $socket = IO::Socket::INET->new(
        LocalAddr => '127.0.0.1',
        LocalPort => 3000,
        Proto     => 'tcp',
        Listen    => 1,
        Reuse     => 1
    );
    if ($socket) {
        print "‚úÖ –¥–æ—Å—Ç—É–ø–µ–Ω\n";
        close($socket);
    } else {
        print "‚ùå –∑–∞–Ω—è—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n";
    }
};
if ($@) {
    print "‚ùå –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ($@)\n";
}

print "\n";

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print "üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:\n";
print "=" x 30 . "\n";

if ($perl_version_ok && $all_required_ok) {
    print "üéâ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ì–û–¢–û–í–´!\n";
    print "   –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å MegaChat –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n\n";
    
    print "üí° –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:\n";
    print "   cd megachat\n";
    print "   perl megachat.pl\n";
    exit 0;
} else {
    print "‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!\n\n";
    
    if (!$perl_version_ok) {
        print "üîÑ –û–±–Ω–æ–≤–∏—Ç–µ Perl –¥–æ –≤–µ—Ä—Å–∏–∏ 5.20+\n";
    }
    
    if (!$all_required_ok) {
        print "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–æ–¥—É–ª–∏:\n";
        print "   cpan Mojolicious DBI DBD::SQLite\n";
    }
    
    print "\n‚ùó –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞.\n";
    exit 1;
}

__END__

=head1 USAGE

    perl tests/01_check_components.pl

=head1 AUTHOR

MegaChat Project

=cut
