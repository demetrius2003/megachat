<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title>–ú–µ–≥–∞—á–∞—Ç - –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="/static/css/main.css?v=30" rel="stylesheet" onload="console.log('‚úÖ CSS –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!')" onerror="console.error('‚ùå CSS –ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω!')">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <i class="bi bi-chat-dots-fill"></i> –ú–µ–≥–∞—á–∞—Ç
            </a>
            
            <div class="navbar-nav ms-auto">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                        <i class="bi bi-person-circle"></i> <span id="username">admin</span>
                        <span id="userStatus" class="status-offline ms-1">‚óè</span>
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" id="adminLink" style="display: none;">
                            <i class="bi bi-gear"></i> –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                        </a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#" id="logoutBtn">
                            <i class="bi bi-box-arrow-right"></i> –í—ã–π—Ç–∏
                        </a></li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <main class="container-fluid p-0">
        <div class="row g-0 h-100">
            <!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
            <div class="col-md-4 col-lg-3">
                <div class="card h-100">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="bi bi-chat-dots"></i> –ß–∞—Ç—ã</h5>
                            <div class="btn-group btn-group-sm">
                                <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#newChatModal" title="–ù–æ–≤—ã–π —á–∞—Ç">
                                    <i class="bi bi-plus-circle"></i>
                                </button>
                                <button class="btn btn-light" id="showNoteModalBtn" title="–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞">
                                    <i class="bi bi-journal-text"></i>
                                </button>
                                <button class="btn btn-light" id="showFileUploadBtn" title="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª">
                                    <i class="bi bi-paperclip"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <!-- –ü–æ–∏—Å–∫ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º -->
                        <div class="p-3 border-bottom">
                            <div class="input-group">
                                <input type="text" class="form-control" id="messageSearch" placeholder="–ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π...">
                                <button class="btn btn-outline-secondary" type="button" id="searchMessagesBtn">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                            <div class="mt-2">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="searchText" checked>
                                    <label class="form-check-label" for="searchText">–¢–µ–∫—Å—Ç</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="searchFiles" checked>
                                    <label class="form-check-label" for="searchFiles">–§–∞–π–ª—ã</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="searchNotes" checked>
                                    <label class="form-check-label" for="searchNotes">–ó–∞–º–µ—Ç–∫–∏</label>
                                </div>
                            </div>
                        </div>
                        
                        <!-- –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ -->
                        <div class="list-group list-group-flush" id="conversationsList">
                            <!-- –ß–∞—Ç—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–¥–µ—Å—å -->
                        </div>
                        
                        <!-- –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ -->
                        <div id="emptyConversations" class="text-center p-4" style="display: none;">
                            <i class="bi bi-chat-dots display-1 text-muted"></i>
                            <p class="text-muted">–ù–µ—Ç —á–∞—Ç–æ–≤</p>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newChatModal">
                                –°–æ–∑–¥–∞—Ç—å —á–∞—Ç
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —á–∞—Ç–∞ -->
            <div class="col-md-8 col-lg-9">
                
                <div id="chatArea" class="card h-100">
                    <div class="card-header">
                        <h5 class="mb-0" id="chatTitle">–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç</h5>
                        <small class="text-muted" id="chatDescription">–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ª–µ–≤–∞</small>
                    </div>
                    <div class="card-body p-0 d-flex flex-column">
                        <div id="messagesContainer" class="flex-grow-1 p-3" style="overflow-y: auto; max-height: 500px;">
                            <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π -->
                            <div id="messageSearchResults" class="mb-3" style="display: none;">
                                <h6>üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:</h6>
                                <div id="messageSearchResultsList" class="list-group">
                                    <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –±—É–¥—É—Ç –∑–¥–µ—Å—å -->
                                </div>
                                <button class="btn btn-sm btn-outline-secondary mt-2" onclick="hideMessageSearchResults()">
                                    <i class="bi bi-x"></i> –ó–∞–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫
                                </button>
                            </div>
                            
                            <div id="messagesList">
                                <!-- –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–¥–µ—Å—å -->
                            </div>
                        </div>
                        <div class="card-footer">
                            <form id="messageForm">
                                <div class="input-group">
                                    <button type="button" class="btn btn-outline-secondary" id="toggleEmojiPickerBtn">
                                        <i class="bi bi-emoji-smile"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" id="showFileUploadBtn2">
                                        <i class="bi bi-paperclip"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" id="toggleVoiceRecordingBtn">
                                        <i class="bi bi-mic"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" id="showNoteModalBtn2">
                                        <i class="bi bi-journal-text"></i>
                                    </button>
                                    <input type="text" class="form-control" id="messageInput" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-send"></i>
                                    </button>
                                </div>
                                <input type="file" id="fileInput" style="display: none;" onchange="uiManager.handleFileSelect(event)">
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ -->
    <div class="modal fade" id="newChatModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">–ù–æ–≤—ã–π —á–∞—Ç</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="newChatForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="chatName" class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                            <input type="text" class="form-control" id="chatName" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞...">
                        </div>
                        <div class="mb-3">
                            <label for="chatDescription" class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                            <textarea class="form-control" id="chatDescription" rows="2" placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞..."></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="participantsSearch" class="form-label">–ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</label>
                            <input type="text" class="form-control" id="participantsSearch" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...">
                        </div>
                        <div id="searchResults" class="mb-3" style="display: none;">
                            <label class="form-label">–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</label>
                            <div id="searchResultsList" class="list-group">
                                <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –±—É–¥—É—Ç –∑–¥–µ—Å—å -->
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">–í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</label>
                            <div id="selectedParticipants" class="list-group">
                                <div class="list-group-item text-muted">–£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–û—Ç–º–µ–Ω–∞</button>
                        <button type="button" class="btn btn-warning" id="testFunctionBtn">–¢–µ—Å—Ç</button>
                        <button type="button" class="btn btn-primary" id="createChatButton">
                            <span id="createChatText">–°–æ–∑–¥–∞—Ç—å —á–∞—Ç</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ -->
    <div class="modal fade" id="noteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="noteModalTitle">–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="noteForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="noteTitle" class="form-label">–ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
                            <input type="text" class="form-control" id="noteTitle" placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏..." required>
                        </div>
                        <div class="mb-3">
                            <label for="noteContent" class="form-label">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ</label>
                            <textarea class="form-control" id="noteContent" rows="4" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏..."></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="noteColor" class="form-label">–¶–≤–µ—Ç</label>
                            <select class="form-select" id="noteColor">
                                <option value="#007bff">–°–∏–Ω–∏–π</option>
                                <option value="#28a745">–ó–µ–ª–µ–Ω—ã–π</option>
                                <option value="#ffc107">–ñ–µ–ª—Ç—ã–π</option>
                                <option value="#dc3545">–ö—Ä–∞—Å–Ω—ã–π</option>
                                <option value="#6f42c1">–§–∏–æ–ª–µ—Ç–æ–≤—ã–π</option>
                                <option value="#fd7e14">–û—Ä–∞–Ω–∂–µ–≤—ã–π</option>
                                <option value="#20c997">–ë–∏—Ä—é–∑–æ–≤—ã–π</option>
                                <option value="#6c757d">–°–µ—Ä—ã–π</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–û—Ç–º–µ–Ω–∞</button>
                        <button type="button" class="btn btn-primary" id="noteSaveBtn">–°–æ–∑–¥–∞—Ç—å</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
    <div class="modal fade" id="imageModal" tabindex="-1">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="imageModalTitle">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center">
                    <img id="imageModalImage" class="img-fluid" style="max-height: 70vh;">
                </div>
                <div class="modal-footer">
                    <a id="imageModalDownload" class="btn btn-primary" target="_blank">
                        <i class="bi bi-download"></i> –°–∫–∞—á–∞—Ç—å
                    </a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        </div>
    </div>

    <!-- –≠–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä -->
    <div id="emojiPicker" class="emoji-picker">
        <div class="row">
            <div class="col-12">
                <h6 class="mb-2">–õ–∏—Ü–∞</h6>
                <div class="d-flex flex-wrap">
                    <button type="button" class="emoji-btn" onclick="console.log('üòÄ –ö–ª–∏–∫ –ø–æ —ç–º–æ–¥–∑–∏!'); if(window.uiManager) { window.uiManager.insertEmoji('üòÄ'); } else { console.error('‚ùå uiManager –ù–ï –Ω–∞–π–¥–µ–Ω!'); }">üòÄ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòÉ')">üòÉ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòÑ')">üòÑ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòÅ')">üòÅ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòÜ')">üòÜ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòÇ')">üòÇ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòä')">üòä</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòç')">üòç</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('ü§î')">ü§î</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üòé')">üòé</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üò¥')">üò¥</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üò¢')">üò¢</button>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <h6 class="mb-2">–ñ–µ—Å—Ç—ã</h6>
                <div class="d-flex flex-wrap">
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üëç')">üëç</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üëé')">üëé</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üëå')">üëå</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('‚úåÔ∏è')">‚úåÔ∏è</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('ü§ù')">ü§ù</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üëè')">üëè</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üôå')">üôå</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('ü§û')">ü§û</button>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <h6 class="mb-2">–°–µ—Ä–¥—Ü–∞</h6>
                <div class="d-flex flex-wrap">
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('‚ù§Ô∏è')">‚ù§Ô∏è</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üíô')">üíô</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üíö')">üíö</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üíõ')">üíõ</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üíú')">üíú</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üñ§')">üñ§</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('ü§ç')">ü§ç</button>
                    <button type="button" class="emoji-btn" onclick="window.uiManager.insertEmoji('üíî')">üíî</button>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <h6 class="mb-2">–ü—Ä–∞–∑–¥–Ω–∏–∫–∏</h6>
                <div class="d-flex flex-wrap">
                    <button type="button" class="emoji-btn" data-emoji="üéâ">üéâ</button>
                    <button type="button" class="emoji-btn" data-emoji="üéä">üéä</button>
                    <button type="button" class="emoji-btn" data-emoji="üéà">üéà</button>
                    <button type="button" class="emoji-btn" data-emoji="üéÅ">üéÅ</button>
                    <button type="button" class="emoji-btn" data-emoji="üéÇ">üéÇ</button>
                    <button type="button" class="emoji-btn" data-emoji="üç∞">üç∞</button>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <h6 class="mb-2">–ü—Ä–∏—Ä–æ–¥–∞</h6>
                <div class="d-flex flex-wrap">
                    <button type="button" class="emoji-btn" data-emoji="üåû">üåû</button>
                    <button type="button" class="emoji-btn" data-emoji="üåô">üåô</button>
                    <button type="button" class="emoji-btn" data-emoji="‚≠ê">‚≠ê</button>
                    <button type="button" class="emoji-btn" data-emoji="üåü">üåü</button>
                    <button type="button" class="emoji-btn" data-emoji="üåà">üåà</button>
                    <button type="button" class="emoji-btn" data-emoji="‚òÄÔ∏è">‚òÄÔ∏è</button>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <h6 class="mb-2">–ñ–∏–≤–æ—Ç–Ω—ã–µ</h6>
                <div class="d-flex flex-wrap">
                    <button type="button" class="emoji-btn" data-emoji="üê∂">üê∂</button>
                    <button type="button" class="emoji-btn" data-emoji="üê±">üê±</button>
                    <button type="button" class="emoji-btn" data-emoji="üê≠">üê≠</button>
                    <button type="button" class="emoji-btn" data-emoji="üêπ">üêπ</button>
                    <button type="button" class="emoji-btn" data-emoji="üê∞">üê∞</button>
                    <button type="button" class="emoji-btn" data-emoji="ü¶ä">ü¶ä</button>
                    <button type="button" class="emoji-btn" data-emoji="üêª">üêª</button>
                    <button type="button" class="emoji-btn" data-emoji="üêº">üêº</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap 5 JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JavaScript –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π -->
    <!-- –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JavaScript —É–¥–∞–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –º–æ–¥—É–ª–∏ -->
    <script>
        // –¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        window.logout = function() {
            fetch('/api/auth/logout', { method: 'POST' })
                .then(() => window.location.href = '/login')
                .catch(error => console.error('Logout failed:', error));
        };
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º
        window.applyMessageStyles = function() {
            const messageCards = document.querySelectorAll('.message-card');
            // console.log('üé® –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º, –Ω–∞–π–¥–µ–Ω–æ:', messageCards.length);
            
            messageCards.forEach((card, index) => {
                const isTextEnd = card.classList.contains('text-end');
                const isTextStart = card.classList.contains('text-start');
                
                if (isTextEnd) {
                    card.style.textAlign = 'right';
                    card.style.marginLeft = 'auto';
                    card.style.marginRight = '0';
                    
                    // –ù–∞–π–¥–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ–Ω–∏–º —Å—Ç–∏–ª–∏
                    const container = card.querySelector('.message-container');
                    if (container) {
                        container.style.backgroundColor = '#007bff';
                        container.style.color = 'white';
                        container.style.borderRadius = '1rem 1rem 0.25rem 1rem';
                        // if (index < 3) console.log('üé® –ü—Ä–∏–º–µ–Ω–∏–ª–∏ –≥–æ–ª—É–±–æ–π —Å—Ç–∏–ª—å –∫ –ø—Ä–∞–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é');
                    }
                } else if (isTextStart) {
                    card.style.textAlign = 'left';
                    card.style.marginLeft = '0';
                    card.style.marginRight = 'auto';
                    
                    // –ù–∞–π–¥–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ–Ω–∏–º —Å—Ç–∏–ª–∏
                    const container = card.querySelector('.message-container');
                    if (container) {
                        container.style.backgroundColor = '#f8f9fa';
                        container.style.color = '#212529';
                        container.style.border = '1px solid #e9ecef';
                        container.style.borderRadius = '1rem 1rem 1rem 0.25rem';
                        // if (index < 3) console.log('üé® –ü—Ä–∏–º–µ–Ω–∏–ª–∏ —Å–µ—Ä—ã–π —Å—Ç–∏–ª—å –∫ –ª–µ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é');
                    }
                }
            });
        };

        window.createChatHTML = function() {
            console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞...');
            console.log('üîç –§—É–Ω–∫—Ü–∏—è createChat –≤—ã–∑–≤–∞–Ω–∞!');
            
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            setTimeout(() => {
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
                const chatNameEl = document.getElementById('chatName');
                const chatDescriptionEl = document.getElementById('chatDescription');
            
            console.log('üìù –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã:', { 
                chatNameEl: !!chatNameEl, 
                chatDescriptionEl: !!chatDescriptionEl,
                chatNameElValue: chatNameEl ? chatNameEl.value : 'undefined',
                chatDescriptionElValue: chatDescriptionEl ? chatDescriptionEl.value : 'undefined'
            });
            
                const chatName = chatNameEl ? (chatNameEl.value || '').trim() : '';
                const chatDescription = chatDescriptionEl ? (chatDescriptionEl.value || '').trim() : '';
            const participants = document.getElementById('selectedParticipants');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∏
            console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', {
                participantsElement: !!participants,
                childrenLength: participants ? participants.children.length : 0,
                selectedParticipants: window.selectedParticipants ? window.selectedParticipants.length : 0,
                selectedParticipantsArray: window.selectedParticipants
            });
            
            if (!window.selectedParticipants || window.selectedParticipants.length === 0) {
                alert('–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —á–∞—Ç–∞!');
                return;
            }
            
            console.log('üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏:', window.selectedParticipants);
            
            // –°–æ–±–∏—Ä–∞–µ–º ID —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            const participantIds = window.selectedParticipants.map(p => p.id);
            
            console.log('üìù –î–∞–Ω–Ω—ã–µ —á–∞—Ç–∞:', {
                name: chatName,
                description: chatDescription,
                participants: participantIds
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const createButton = document.querySelector('#newChatModal .btn-primary');
            const originalText = createButton.innerHTML;
            createButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>–°–æ–∑–¥–∞–Ω–∏–µ...';
            createButton.disabled = true;
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞
            fetch('/api/conversations', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    name: chatName || '–ù–æ–≤—ã–π —á–∞—Ç',
                    description: chatDescription,
                    participants: participantIds
                })
            })
            .then(response => {
                console.log('üì° –û—Ç–≤–µ—Ç API:', response.status);
                return response.json();
            })
            .then(data => {
                console.log('‚úÖ –ß–∞—Ç —Å–æ–∑–¥–∞–Ω:', data);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = bootstrap.Modal.getInstance(document.getElementById('newChatModal'));
                if (modal) {
                    modal.hide();
                }
                
                // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                document.getElementById('chatName').value = '';
                document.getElementById('chatDescription').value = '';
                document.getElementById('participantsSearch').value = '';
                document.getElementById('searchResults').style.display = 'none';
                document.getElementById('selectedParticipants').innerHTML = '<div class="list-group-item text-muted">–£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</div>';
                window.selectedParticipants = [];
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                alert('–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
                loadConversations();
                
            })
            .catch(error => {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞:', error);
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞—Ç–∞: ' + error.message);
            })
            .finally(() => {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                createButton.innerHTML = originalText;
                createButton.disabled = false;
            });
            }, 100); // –ó–∞–¥–µ—Ä–∂–∫–∞ 100–º—Å
        };
        
        // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        window.searchUsers = function(query) {
            console.log('üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', query);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
            const modal = document.getElementById('newChatModal');
            if (!modal || !modal.classList.contains('show')) {
                console.log('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ');
                return;
            }
            
            if (query.length < 2) {
                const searchResults = document.getElementById('searchResults');
                if (searchResults) {
                    searchResults.style.display = 'none';
                }
                return;
            }
            
            console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API...');
            fetch(`/api/users/search?q=${encodeURIComponent(query)}`)
                .then(response => {
                    console.log('üì° –û—Ç–≤–µ—Ç API:', response.status);
                    return response.json();
                })
                .then(users => {
                    console.log('üë• –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', users);
                    const container = document.getElementById('searchResultsList');
                    const searchResults = document.getElementById('searchResults');
                    
                    if (!container || !searchResults) {
                        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                        return;
                    }
                    
                    if (users.length === 0) {
                        container.innerHTML = '<div class="list-group-item text-muted">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
                    } else {
                        container.innerHTML = users.map(user => {
                            console.log('üîç –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
                            return `
                                <div class="list-group-item list-group-item-action" data-user-id="${user.id}" data-username="${user.username}">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">${user.username}</h6>
                                        <small class="text-muted">${user.status === 'online' ? 'üü¢' : '‚ö´'}</small>
                                    </div>
                                    <p class="mb-1 text-muted small">${user.email || '–ù–µ—Ç email'}</p>
                                </div>
                            `;
                        }).join('');
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                        const items = container.querySelectorAll('.list-group-item-action');
                        console.log('üîç –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:', items.length);
                        
                        if (items.length === 0) {
                            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
                            return;
                        }
                        
                        items.forEach((item, index) => {
                            const userId = item.getAttribute('data-user-id');
                            const username = item.getAttribute('data-username');
                            console.log(`üîç –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}:`, userId, username);
                            console.log(`üîç HTML —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}:`, item.outerHTML);
                            
                            item.addEventListener('click', function(e) {
                                e.preventDefault();
                                e.stopPropagation();
                                
                                const userId = parseInt(this.getAttribute('data-user-id'));
                                const username = this.getAttribute('data-username');
                                console.log('üî¥ –ö–õ–ò–ö –ü–û –£–ß–ê–°–¢–ù–ò–ö–£ (–ø—Ä—è–º–æ–π):', userId, username);
                                console.log('üîç –ê—Ç—Ä–∏–±—É—Ç—ã —ç–ª–µ–º–µ–Ω—Ç–∞ (–ø—Ä—è–º–æ–π):', {
                                    'data-user-id': this.getAttribute('data-user-id'),
                                    'data-username': this.getAttribute('data-username'),
                                    dataset: this.dataset
                                });
                                addParticipant(userId, username);
                            });
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                            item.querySelectorAll('*').forEach(child => {
                                child.addEventListener('click', function(e) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                    
                                    const userId = parseInt(item.getAttribute('data-user-id'));
                                    const username = item.getAttribute('data-username');
                                    console.log('üî¥ –ö–õ–ò–ö –ü–û –£–ß–ê–°–¢–ù–ò–ö–£ (–¥–æ—á–µ—Ä–Ω–∏–π):', userId, username);
                                    console.log('üîç –ê—Ç—Ä–∏–±—É—Ç—ã —ç–ª–µ–º–µ–Ω—Ç–∞ (–¥–æ—á–µ—Ä–Ω–∏–π):', {
                                        'data-user-id': item.getAttribute('data-user-id'),
                                        'data-username': item.getAttribute('data-username'),
                                        dataset: item.dataset
                                    });
                                    addParticipant(userId, username);
                                });
                            });
                        });
                        
                        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
                        container.addEventListener('click', function(e) {
                            console.log('üîç –ö–ª–∏–∫ –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É:', e.target);
                            console.log('üîç –ö–ª–∞—Å—Å —ç–ª–µ–º–µ–Ω—Ç–∞:', e.target.className);
                            console.log('üîç –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç:', e.target.parentElement);
                            console.log('üîç –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Ä–æ–¥–∏—Ç–µ–ª—è:', e.target.parentElement?.parentElement);
                            
                            // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –Ω—É–∂–Ω—ã–º –∫–ª–∞—Å—Å–æ–º –≤–≤–µ—Ä—Ö –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
                            let item = e.target;
                            while (item && !item.classList.contains('list-group-item-action')) {
                                item = item.parentElement;
                            }
                            
                            console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç:', item);
                            
                            if (item && item.classList.contains('list-group-item-action')) {
                                const userId = parseInt(item.getAttribute('data-user-id'));
                                const username = item.getAttribute('data-username');
                                console.log('üî¥ –ö–õ–ò–ö –ü–û –£–ß–ê–°–¢–ù–ò–ö–£ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ):', userId, username);
                                console.log('üîç –ê—Ç—Ä–∏–±—É—Ç—ã —ç–ª–µ–º–µ–Ω—Ç–∞:', {
                                    'data-user-id': item.getAttribute('data-user-id'),
                                    'data-username': item.getAttribute('data-username'),
                                    dataset: item.dataset
                                });
                                addParticipant(userId, username);
                            }
                        });
                    }
                    
                    searchResults.style.display = 'block';
                    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ');
                })
                .catch(error => {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
                });
        };
        
        // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
        window.selectedParticipants = [];
        window.addParticipant = function(userId, username) {
            console.log('üî¥ addParticipant –≤—ã–∑–≤–∞–Ω–∞:', userId, username);
            console.log('üîç –¢–µ–∫—É—â–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', window.selectedParticipants);
            
            if (!window.selectedParticipants.find(p => p.id === userId)) {
                window.selectedParticipants.push({ id: userId, username: username });
                console.log('‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω. –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫:', window.selectedParticipants);
                updateSelectedParticipants();
            } else {
                console.log('‚ö†Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω');
            }
            
            document.getElementById('participantsSearch').value = '';
            document.getElementById('searchResults').style.display = 'none';
        };
        
        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        window.updateSelectedParticipants = function() {
            const container = document.getElementById('selectedParticipants');
            if (window.selectedParticipants.length === 0) {
                container.innerHTML = '<div class="list-group-item text-muted">–£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</div>';
            } else {
                container.innerHTML = window.selectedParticipants.map(participant => `
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <span>${participant.username}</span>
                        <button type="button" class="btn btn-sm btn-outline-danger" data-participant-id="${participant.id}">
                            <i class="bi bi-x"></i>
                        </button>
                    </div>
                `).join('');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
                container.querySelectorAll('button[data-participant-id]').forEach(button => {
                    button.addEventListener('click', function() {
                        const participantId = parseInt(this.getAttribute('data-participant-id'));
                        removeParticipant(participantId);
                    });
                });
            }
        };
        
        // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
        window.removeParticipant = function(userId) {
            window.selectedParticipants = window.selectedParticipants.filter(p => p.id !== userId);
            updateSelectedParticipants();
        };
        
        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        
        window.showFileUpload = function() {
            document.getElementById('fileInput').click();
        };
        
        window.toggleVoiceRecording = function() {
            alert('–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        };
        
        window.showNoteModal = function() {
            const modal = new bootstrap.Modal(document.getElementById('noteModal'));
            modal.show();
        };
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        window.handleFileSelect = function(event) {
            const file = event.target.files[0];
            if (file) {
                alert('–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
            }
        };
        
        // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        window.searchMessages = function() {
            console.log('üîç –ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π');
            if (window.searchManager && window.searchManager.searchMessages) {
                searchManager.searchMessages();
            } else {
                console.error('searchManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                alert('–ú–æ–¥—É–ª—å –ø–æ–∏—Å–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É.');
            }
        };
        
        // –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
        window.hideMessageSearchResults = function() {
            const searchResults = document.getElementById('messageSearchResults');
            if (searchResults) {
                searchResults.style.display = 'none';
            }
        };
        
        // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
        window.loadConversations = function() {
            console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤...');
            
            fetch('/api/conversations')
                .then(response => response.json())
                .then(data => {
                    console.log('üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤:', data);
                    const container = document.getElementById('conversationsList');
                    
                    // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º conversations
                    const conversations = Array.isArray(data) ? data : (data.conversations || []);
                    
                    if (!conversations || conversations.length === 0) {
                        container.innerHTML = '<div class="list-group-item text-muted text-center">–ù–µ—Ç —á–∞—Ç–æ–≤</div>';
                        document.getElementById('emptyConversations').style.display = 'block';
                    } else {
                        document.getElementById('emptyConversations').style.display = 'none';
                        container.innerHTML = conversations.map(chat => `
                            <div class="list-group-item list-group-item-action" data-chat-id="${chat.id}">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">${chat.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h6>
                                    <small class="text-muted">${chat.updated_at_formatted || new Date(chat.updated_at * 1000).toLocaleDateString()}</small>
                                </div>
                                <p class="mb-1 text-muted small">${chat.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
                                <small class="text-muted">${chat.last_message ? '–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ' + chat.last_message : '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π'}</small>
                            </div>
                        `).join('');
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —á–∞—Ç–æ–≤
                        container.querySelectorAll('div[data-chat-id]').forEach(chatItem => {
                            chatItem.addEventListener('click', function() {
                                const chatId = parseInt(this.getAttribute('data-chat-id'));
                                selectConversation(chatId);
                            });
                        });
                    }
                })
                .catch(error => {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–æ–≤:', error);
                });
        };
        
        
        // –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞
        window.selectConversation = function(chatId) {
            console.log('üí¨ –í—ã–±–∏—Ä–∞–µ–º —á–∞—Ç:', chatId);
            if (window.chatManager) {
                chatManager.selectConversation(chatId);
            } else {
                console.error('chatManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                alert('–ß–∞—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É.');
            }
        };
        
        // –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
        window.testFunction = function() {
            console.log('üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
            alert('–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
        };
        
        // –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ —ç–º–æ–¥–∑–∏
        window.insertEmoji = function(emoji) {
            console.log('üòÄ –í—Å—Ç–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏:', emoji);
            const messageInput = document.getElementById('messageInput');
            console.log('üòÄ –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–æ:', !!messageInput);
            
            if (messageInput) {
                const start = messageInput.selectionStart || 0;
                const end = messageInput.selectionEnd || 0;
                const text = messageInput.value || '';
                
                console.log('üòÄ –ü–æ–∑–∏—Ü–∏—è –∫—É—Ä—Å–æ—Ä–∞:', { start, end, text });
                
                messageInput.value = text.substring(0, start) + emoji + text.substring(end);
                messageInput.focus();
                messageInput.setSelectionRange(start + emoji.length, start + emoji.length);
                
                console.log('üòÄ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç:', messageInput.value);
            } else {
                console.error('üòÄ –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
            }
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —ç–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä
            const picker = document.getElementById('emojiPicker');
            if (picker) {
                picker.style.display = 'none';
                console.log('üòÄ –≠–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä –∑–∞–∫—Ä—ã—Ç');
            }
        };
        
        // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –º–æ–¥—É–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            console.log('–ü—Ä–æ–±–ª–µ–º–∞: —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É CSS
            const cssLink = document.querySelector('link[href*="main.css"]');
            if (cssLink) {
                console.log('üîç CSS —Å—Å—ã–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:', cssLink.href);
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ CSS
                const testElement = document.createElement('div');
                testElement.className = 'message-card';
                testElement.style.display = 'none';
                document.body.appendChild(testElement);
                
                const computedStyle = window.getComputedStyle(testElement);
                console.log('üîç CSS –∑–∞–≥—Ä—É–∂–µ–Ω:', computedStyle.maxWidth !== 'none');
                
                document.body.removeChild(testElement);
            } else {
                console.error('‚ùå CSS —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è createChatHTML –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é createChatHTML:', typeof window.createChatHTML);
            if (typeof window.createChatHTML !== 'function') {
                console.error('‚ùå –§—É–Ω–∫—Ü–∏—è createChatHTML –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞!');
            }
            
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            const createButton = document.getElementById('createChatButton');
            if (createButton) {
                console.log('üîç –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞');
                createButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    console.log('üî¥ –ö–ù–û–ü–ö–ê –ù–ê–ñ–ê–¢–ê –ß–ï–†–ï–ó addEventListener!');
                    console.log('üîç –¢–∏–ø createChatHTML:', typeof window.createChatHTML);
                    if (typeof window.createChatHTML === 'function') {
                        console.log('‚úÖ –í—ã–∑—ã–≤–∞–µ–º createChatHTML()');
                        window.createChatHTML();
                    } else {
                        console.error('‚ùå –§—É–Ω–∫—Ü–∏—è createChatHTML –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
                        alert('–§—É–Ω–∫—Ü–∏—è createChatHTML –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
                    }
                });
            } else {
                console.error('‚ùå –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
            loadConversations();
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            const searchMessagesBtn = document.getElementById('searchMessagesBtn');
            if (searchMessagesBtn) {
                searchMessagesBtn.addEventListener('click', function() {
                    searchMessages();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ Enter
            const messageSearchInput = document.getElementById('messageSearch');
            if (messageSearchInput) {
                messageSearchInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        searchMessages();
                    }
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–º–µ—Ç–æ–∫
            const showNoteModalBtn = document.getElementById('showNoteModalBtn');
            if (showNoteModalBtn) {
                showNoteModalBtn.addEventListener('click', function() {
                    showNoteModal();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
            const showFileUploadBtn = document.getElementById('showFileUploadBtn');
            if (showFileUploadBtn) {
                showFileUploadBtn.addEventListener('click', function() {
                    showFileUpload();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —ç–º–æ–¥–∑–∏
            const toggleEmojiPickerBtn = document.getElementById('toggleEmojiPickerBtn');
            console.log('üé≠ –ö–Ω–æ–ø–∫–∞ —ç–º–æ–¥–∑–∏ –Ω–∞–π–¥–µ–Ω–∞:', !!toggleEmojiPickerBtn);
            if (toggleEmojiPickerBtn) {
                toggleEmojiPickerBtn.addEventListener('click', function(e) {
                    console.log('üé≠ –ö–õ–ò–ö –ü–û –ö–ù–û–ü–ö–ï –≠–ú–û–î–ó–ò!');
                    e.preventDefault();
                    e.stopPropagation();
                    if (window.uiManager) {
                        window.uiManager.toggleEmojiPicker();
                    } else {
                        console.error('‚ùå uiManager –ù–ï –Ω–∞–π–¥–µ–Ω!');
                    }
                });
            } else {
                console.error('üé≠ –ö–Ω–æ–ø–∫–∞ —ç–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
            const showFileUploadBtn2 = document.getElementById('showFileUploadBtn2');
            if (showFileUploadBtn2) {
                showFileUploadBtn2.addEventListener('click', function() {
                    showFileUpload();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            const toggleVoiceRecordingBtn = document.getElementById('toggleVoiceRecordingBtn');
            if (toggleVoiceRecordingBtn) {
                toggleVoiceRecordingBtn.addEventListener('click', function() {
                    toggleVoiceRecording();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫–Ω–æ–ø–∫–∏ –∑–∞–º–µ—Ç–æ–∫
            const showNoteModalBtn2 = document.getElementById('showNoteModalBtn2');
            if (showNoteModalBtn2) {
                showNoteModalBtn2.addEventListener('click', function() {
                    showNoteModal();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
            const noteSaveBtn = document.getElementById('noteSaveBtn');
            if (noteSaveBtn) {
                noteSaveBtn.addEventListener('click', function() {
                    console.log('üìù –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏...');
                    if (window.noteManager && window.noteManager.createNote) {
                        window.noteManager.createNote();
                    } else {
                        console.error('üìù noteManager –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                        alert('–û—à–∏–±–∫–∞: –º–æ–¥—É–ª—å –∑–∞–º–µ—Ç–æ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
                    }
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∞
            const testFunctionBtn = document.getElementById('testFunctionBtn');
            if (testFunctionBtn) {
                testFunctionBtn.addEventListener('click', function() {
                    testFunction();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
            const logoutBtn = document.getElementById('logoutBtn');
            if (logoutBtn) {
                logoutBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    logout();
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —ç–º–æ–¥–∑–∏ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π)
            document.addEventListener('click', function(e) {
                console.log('üîç –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É:', e.target, '–ö–ª–∞—Å—Å—ã:', e.target.className);
                if (e.target.classList.contains('emoji-btn')) {
                    console.log('üòÄ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —ç–º–æ–¥–∑–∏:', e.target);
                    const emoji = e.target.getAttribute('data-emoji');
                    if (emoji) {
                        console.log('üòÄ –≠–º–æ–¥–∑–∏ –Ω–∞–π–¥–µ–Ω–æ:', emoji);
                        insertEmoji(emoji);
                    } else {
                        console.error('üòÄ –ê—Ç—Ä–∏–±—É—Ç data-emoji –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                    }
                }
            });
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–Ω–æ–ø–∫–∞–º —ç–º–æ–¥–∑–∏
            function styleEmojiButtons() {
                const emojiButtons = document.querySelectorAll('.emoji-btn');
                // console.log('üé® –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ —ç–º–æ–¥–∑–∏:', emojiButtons.length);
                
                emojiButtons.forEach((btn, index) => {
                    // console.log(`üé® –°—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫—É ${index}:`, btn);
                    btn.style.background = 'none';
                    btn.style.border = 'none';
                    btn.style.fontSize = '1.2rem';
                    btn.style.padding = '0.25rem';
                    btn.style.margin = '0.125rem';
                    btn.style.borderRadius = '0.25rem';
                    btn.style.cursor = 'pointer';
                    btn.style.transition = 'background-color 0.2s';
                    btn.style.display = 'inline-block';
                    
                    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                    btn.removeEventListener('mouseenter', btn._mouseenterHandler);
                    btn.removeEventListener('mouseleave', btn._mouseleaveHandler);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                    btn._mouseenterHandler = function() {
                        this.style.backgroundColor = '#f8f9fa';
                    };
                    btn._mouseleaveHandler = function() {
                        this.style.backgroundColor = 'transparent';
                    };
                    
                    btn.addEventListener('mouseenter', btn._mouseenterHandler);
                    btn.addEventListener('mouseleave', btn._mouseleaveHandler);
                });
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –∫–Ω–æ–ø–∫–∞–º —ç–º–æ–¥–∑–∏
            styleEmojiButtons();
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
            setTimeout(() => {
                window.applyMessageStyles();
                styleEmojiButtons();
            }, 1000);
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            document.addEventListener('input', function(e) {
                console.log('üîç –°–æ–±—ã—Ç–∏–µ input:', e.target.id, e.target.value);
                if (e.target.id === 'participantsSearch') {
                    console.log('‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
                    searchUsers(e.target.value);
                }
            });
            
            // –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            const modal = document.getElementById('newChatModal');
            if (modal) {
                modal.addEventListener('hidden.bs.modal', function() {
                    const searchResults = document.getElementById('searchResults');
                    const searchInput = document.getElementById('participantsSearch');
                    if (searchResults) {
                        searchResults.style.display = 'none';
                    }
                    if (searchInput) {
                        searchInput.value = '';
                    }
                    console.log('üßπ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω—ã');
                });
            }
        });
    </script>
    
    <!-- –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª–∏ JavaScript –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ -->
    <script src="/static/js/notifications.js?v=25"></script>
    <script src="/static/js/typing.js?v=25"></script>
    <script src="/static/js/polling.js?v=25"></script>
    <script src="/static/js/websocket.js?v=25"></script>
    <script src="/static/js/reactions.js?v=27"></script>
    <script src="/static/js/voice.js?v=25"></script>
    <script src="/static/js/notes.js?v=25"></script>
    <script src="/static/js/files.js?v=25"></script>
    <script src="/static/js/search.js?v=25"></script>
    <script src="/static/js/ui.js?v=25"></script>
    <script src="/static/js/chat.js?v=25"></script>
    <script src="/static/js/main.js?v=25"></script>
    <script>
        // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        setTimeout(() => {
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤:');
            console.log('üìÅ uiManager:', typeof window.uiManager, window.uiManager);
            console.log('üìÅ chatManager:', typeof window.chatManager, window.chatManager);
            console.log('üìÅ chatManager.currentUserId:', window.chatManager?.currentUserId);
            console.log('üìÅ searchManager:', typeof window.searchManager, window.searchManager);
            console.log('üìÅ noteManager:', typeof window.noteManager, window.noteManager);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä
            const picker = document.getElementById('emojiPicker');
            console.log('üìÅ –≠–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä –Ω–∞–π–¥–µ–Ω:', !!picker);
            if (picker) {
                const styles = window.getComputedStyle(picker);
                console.log('üìÅ –°—Ç–∏–ª–∏ —ç–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä–∞:', {
                    display: styles.display,
                    position: styles.position,
                    zIndex: styles.zIndex,
                    backgroundColor: styles.backgroundColor,
                    border: styles.border
                });
                
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
                picker.style.position = 'fixed';
                picker.style.zIndex = '9999';
                picker.style.backgroundColor = 'white';
                picker.style.border = '2px solid #007bff';
                picker.style.borderRadius = '8px';
                picker.style.padding = '10px';
                picker.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
                picker.style.maxHeight = '300px';
                picker.style.overflow = 'auto';
                picker.style.width = '300px';
                console.log('üìÅ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω–∏–ª–∏ —Å—Ç–∏–ª–∏ –∫ —ç–º–æ–¥–∑–∏ –ø–∏–∫–µ—Ä—É');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º CSS –∫–ª–∞—Å—Å—ã —Å–æ–æ–±—â–µ–Ω–∏–π
            const messageCards = document.querySelectorAll('.message-card');
            console.log('üìÅ –ù–∞–π–¥–µ–Ω–æ message-card —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', messageCards.length);
            
            if (messageCards.length > 0) {
                messageCards.forEach((card, index) => {
                    if (index < 3) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 3
                        const styles = window.getComputedStyle(card);
                        const container = card.querySelector('.message-container');
                        const containerStyles = container ? window.getComputedStyle(container) : null;
                        
                        console.log(`üìÅ –°–æ–æ–±—â–µ–Ω–∏–µ ${index}:`, {
                            classes: card.className,
                            marginLeft: styles.marginLeft,
                            marginRight: styles.marginRight,
                            textAlign: styles.textAlign,
                            containerBg: containerStyles ? containerStyles.backgroundColor : '–Ω–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞',
                            containerColor: containerStyles ? containerStyles.color : '–Ω–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞'
                        });
                    }
                });
            }
        }, 2000);
    </script>
</body>
</html>
